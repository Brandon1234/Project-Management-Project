/* Brandon Lit
 * 2017-05-15
 * This is the frame for the quiz*/
package projectmanagementproject;

import java.awt.Color;
import java.util.Set;

/**
 *
 * @author Brandon
 */
public class QuizFrame extends javax.swing.JFrame {

    int count = 0;
    ProjectManagementProject MainWindow;
    MultipleChoice[] questions;
    int[] indexes;
    boolean answer;
    int currentIndex = 0;

    /**
     * Creates new form QuizFrame
     */
    public QuizFrame(ProjectManagementProject m, MultipleChoice[] q) {
        initComponents();
        MainWindow = m;
        questions = q;
        indexes = new int[questions.length];
        for (int j = 0; j < indexes.length; j++) {
            indexes[j] = j;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rBtnGrpAns = new javax.swing.ButtonGroup();
        btnBack = new javax.swing.JButton();
        rBtnA = new javax.swing.JRadioButton();
        rBtnB = new javax.swing.JRadioButton();
        rBtnC = new javax.swing.JRadioButton();
        rBtnD = new javax.swing.JRadioButton();
        btnAns = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        lblQNum = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtQuestion = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        rBtnGrpAns.add(rBtnA);
        rBtnA.setText("jRadioButton1");

        rBtnGrpAns.add(rBtnB);
        rBtnB.setText("jRadioButton2");

        rBtnGrpAns.add(rBtnC);
        rBtnC.setText("jRadioButton3");

        rBtnGrpAns.add(rBtnD);
        rBtnD.setText("jRadioButton4");

        btnAns.setText("Select");
        btnAns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnsActionPerformed(evt);
            }
        });

        btnNext.setText("Start Quiz!");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        lblQNum.setText("You have answered 0 of 10 questions");

        jScrollPane1.setEnabled(false);

        txtQuestion.setEditable(false);
        txtQuestion.setColumns(20);
        txtQuestion.setLineWrap(true);
        txtQuestion.setRows(5);
        jScrollPane1.setViewportView(txtQuestion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rBtnC)
                                .addGap(18, 18, 18)
                                .addComponent(rBtnD))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rBtnA)
                                .addGap(18, 18, 18)
                                .addComponent(rBtnB))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblQNum)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAns)
                            .addComponent(btnBack))
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnNext)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rBtnA)
                            .addComponent(rBtnB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rBtnC)
                            .addComponent(rBtnD)
                            .addComponent(btnNext))
                        .addGap(1, 1, 1)
                        .addComponent(btnBack)
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAns)
                            .addComponent(lblQNum))
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        //When the Back button is pressed
        this.setVisible(false);
        MainWindow.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnsActionPerformed
        //When the Select answer button is pressed

        if (rBtnA.isSelected() && questions[currentIndex].getMCAnswer().equals("A")) {
            answer = true;
        } else if (rBtnB.isSelected() && questions[currentIndex].getMCAnswer().equals("B")) {
            answer = true;
        } else if (rBtnC.isSelected() && questions[currentIndex].getMCAnswer().equals("C")) {
            answer = true;
        } else if (rBtnD.isSelected() && questions[currentIndex].getMCAnswer().equals("D")) {
            answer = true;
        } else {
            answer = false;
        }

        if (answer) {
            txtQuestion.setBackground(Color.green);
        } else {
            txtQuestion.setBackground(Color.red);
        }

    }//GEN-LAST:event_btnAnsActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        btnNext.setText("Next Question");
        displayQuestions(count);
        if (count < indexes.length) {
            count++;
        }
    }//GEN-LAST:event_btnNextActionPerformed

    /**
     *
     */
    private void randomQuestion() {
        //creates a boolean and integer to keep track of whether or not the question has been picked
        boolean isNew = false;
        int index = 0, baseCase = 0;
        //generates a random number between zero and the number of questions
        currentIndex = (int) (Math.random() * indexes.length);
        //for teh number of questions
        for (int i = 0; i < indexes.length; i++) {
            //checks to see if the indexes match
            if (currentIndex == indexes[i]) {
                //if they match set the boolean to true
                isNew = true;
                //set the indec to the value of i
                index = i;
            }
            if (indexes[i] == -1) {
                baseCase += 1;
            }
            System.out.println(indexes[i]);
        }

        if (baseCase == indexes.length) {
            btnAns.setEnabled(false);
            btnNext.setEnabled(false);
        } else {
            //if the number was new
            if (isNew) {
                //"removes" the number at that index
                indexes[index] = -1;
            } else {
                //if it wasn't generate a new random number
                randomQuestion();
            }
        }
    }

    /**
     * display the question
     */
    private void displayQuestions(int count) {
        //runs the random question method
        randomQuestion();
        //display the question in the appropriate place
        txtQuestion.setText(questions[currentIndex].getQuestion());
        //if it is a true or false question
        if (questions[currentIndex].isTrueFalse) {
            //disable 2 of the radio buttons so that the user cant select them
            rBtnC.setEnabled(false);
            rBtnD.setEnabled(false);
            //set the other 2 buttons to say true or false
            rBtnA.setText("TRUE");
            rBtnB.setText("FALSE");
            //if its not true or false
        } else {
            //enable the other 2 buttons just incase the last question was true or false
            rBtnC.setEnabled(true);
            rBtnD.setEnabled(true);
            //display all of the answers
            rBtnA.setText(questions[currentIndex].getAnswerA());
            rBtnB.setText(questions[currentIndex].getAnswerB());
            rBtnC.setText(questions[currentIndex].getAnswerC());
            rBtnD.setText(questions[currentIndex].getAnswerD());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAns;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnNext;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblQNum;
    private javax.swing.JRadioButton rBtnA;
    private javax.swing.JRadioButton rBtnB;
    private javax.swing.JRadioButton rBtnC;
    private javax.swing.JRadioButton rBtnD;
    private javax.swing.ButtonGroup rBtnGrpAns;
    private javax.swing.JTextArea txtQuestion;
    // End of variables declaration//GEN-END:variables
}
